/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var data_types_pb = require('./data_types_pb.js');
goog.object.extend(proto, data_types_pb);
var data_order_pb = require('./data_order_pb.js');
goog.object.extend(proto, data_order_pb);
goog.exportSymbol('proto.io.lightcone.data.requests.DepositRequest', null, global);
goog.exportSymbol('proto.io.lightcone.data.requests.OffchainWithdrawalRequest', null, global);
goog.exportSymbol('proto.io.lightcone.data.requests.OnchainWithdrawalRequest', null, global);
goog.exportSymbol('proto.io.lightcone.data.requests.OrderCancellationRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.lightcone.data.requests.DepositRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.lightcone.data.requests.DepositRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.lightcone.data.requests.DepositRequest.displayName = 'proto.io.lightcone.data.requests.DepositRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.lightcone.data.requests.DepositRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.lightcone.data.requests.DepositRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.lightcone.data.requests.DepositRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.lightcone.data.requests.DepositRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountId: (f = msg.getAccountId()) && data_types_pb.AccountID.toObject(includeInstance, f),
    txData: (f = msg.getTxData()) && data_types_pb.TxData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.lightcone.data.requests.DepositRequest}
 */
proto.io.lightcone.data.requests.DepositRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.lightcone.data.requests.DepositRequest;
  return proto.io.lightcone.data.requests.DepositRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.lightcone.data.requests.DepositRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.lightcone.data.requests.DepositRequest}
 */
proto.io.lightcone.data.requests.DepositRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExchangeId(value);
      break;
    case 2:
      var value = new data_types_pb.AccountID;
      reader.readMessage(value,data_types_pb.AccountID.deserializeBinaryFromReader);
      msg.setAccountId(value);
      break;
    case 3:
      var value = new data_types_pb.TxData;
      reader.readMessage(value,data_types_pb.TxData.deserializeBinaryFromReader);
      msg.setTxData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.lightcone.data.requests.DepositRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.lightcone.data.requests.DepositRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.lightcone.data.requests.DepositRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.lightcone.data.requests.DepositRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      data_types_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getTxData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      data_types_pb.TxData.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 exchange_id = 1;
 * @return {number}
 */
proto.io.lightcone.data.requests.DepositRequest.prototype.getExchangeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.io.lightcone.data.requests.DepositRequest.prototype.setExchangeId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional io.lightcone.data.types.AccountID account_id = 2;
 * @return {?proto.io.lightcone.data.types.AccountID}
 */
proto.io.lightcone.data.requests.DepositRequest.prototype.getAccountId = function() {
  return /** @type{?proto.io.lightcone.data.types.AccountID} */ (
    jspb.Message.getWrapperField(this, data_types_pb.AccountID, 2));
};


/** @param {?proto.io.lightcone.data.types.AccountID|undefined} value */
proto.io.lightcone.data.requests.DepositRequest.prototype.setAccountId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.io.lightcone.data.requests.DepositRequest.prototype.clearAccountId = function() {
  this.setAccountId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.DepositRequest.prototype.hasAccountId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional io.lightcone.data.types.TxData tx_data = 3;
 * @return {?proto.io.lightcone.data.types.TxData}
 */
proto.io.lightcone.data.requests.DepositRequest.prototype.getTxData = function() {
  return /** @type{?proto.io.lightcone.data.types.TxData} */ (
    jspb.Message.getWrapperField(this, data_types_pb.TxData, 3));
};


/** @param {?proto.io.lightcone.data.types.TxData|undefined} value */
proto.io.lightcone.data.requests.DepositRequest.prototype.setTxData = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.io.lightcone.data.requests.DepositRequest.prototype.clearTxData = function() {
  this.setTxData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.DepositRequest.prototype.hasTxData = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.lightcone.data.requests.OnchainWithdrawalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.lightcone.data.requests.OnchainWithdrawalRequest.displayName = 'proto.io.lightcone.data.requests.OnchainWithdrawalRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.lightcone.data.requests.OnchainWithdrawalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.lightcone.data.requests.OnchainWithdrawalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountId: (f = msg.getAccountId()) && data_types_pb.AccountID.toObject(includeInstance, f),
    txData: (f = msg.getTxData()) && data_types_pb.TxData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.lightcone.data.requests.OnchainWithdrawalRequest}
 */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.lightcone.data.requests.OnchainWithdrawalRequest;
  return proto.io.lightcone.data.requests.OnchainWithdrawalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.lightcone.data.requests.OnchainWithdrawalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.lightcone.data.requests.OnchainWithdrawalRequest}
 */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExchangeId(value);
      break;
    case 2:
      var value = new data_types_pb.AccountID;
      reader.readMessage(value,data_types_pb.AccountID.deserializeBinaryFromReader);
      msg.setAccountId(value);
      break;
    case 3:
      var value = new data_types_pb.TxData;
      reader.readMessage(value,data_types_pb.TxData.deserializeBinaryFromReader);
      msg.setTxData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.lightcone.data.requests.OnchainWithdrawalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.lightcone.data.requests.OnchainWithdrawalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      data_types_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getTxData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      data_types_pb.TxData.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 exchange_id = 1;
 * @return {number}
 */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.prototype.getExchangeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.prototype.setExchangeId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional io.lightcone.data.types.AccountID account_id = 2;
 * @return {?proto.io.lightcone.data.types.AccountID}
 */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.prototype.getAccountId = function() {
  return /** @type{?proto.io.lightcone.data.types.AccountID} */ (
    jspb.Message.getWrapperField(this, data_types_pb.AccountID, 2));
};


/** @param {?proto.io.lightcone.data.types.AccountID|undefined} value */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.prototype.setAccountId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.io.lightcone.data.requests.OnchainWithdrawalRequest.prototype.clearAccountId = function() {
  this.setAccountId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.prototype.hasAccountId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional io.lightcone.data.types.TxData tx_data = 3;
 * @return {?proto.io.lightcone.data.types.TxData}
 */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.prototype.getTxData = function() {
  return /** @type{?proto.io.lightcone.data.types.TxData} */ (
    jspb.Message.getWrapperField(this, data_types_pb.TxData, 3));
};


/** @param {?proto.io.lightcone.data.types.TxData|undefined} value */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.prototype.setTxData = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.io.lightcone.data.requests.OnchainWithdrawalRequest.prototype.clearTxData = function() {
  this.setTxData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OnchainWithdrawalRequest.prototype.hasTxData = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.lightcone.data.requests.OffchainWithdrawalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.lightcone.data.requests.OffchainWithdrawalRequest.displayName = 'proto.io.lightcone.data.requests.OffchainWithdrawalRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.lightcone.data.requests.OffchainWithdrawalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.lightcone.data.requests.OffchainWithdrawalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountId: (f = msg.getAccountId()) && data_types_pb.AccountID.toObject(includeInstance, f),
    tokenId: (f = msg.getTokenId()) && data_types_pb.TokenID.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && data_types_pb.Amount.toObject(includeInstance, f),
    walletId: (f = msg.getWalletId()) && data_types_pb.AccountID.toObject(includeInstance, f),
    tokenF: (f = msg.getTokenF()) && data_types_pb.TokenID.toObject(includeInstance, f),
    amountF: (f = msg.getAmountF()) && data_types_pb.Amount.toObject(includeInstance, f),
    walletSplit: (f = msg.getWalletSplit()) && data_types_pb.Percentage.toObject(includeInstance, f),
    nonce: (f = msg.getNonce()) && data_types_pb.Nonce.toObject(includeInstance, f),
    sig: (f = msg.getSig()) && data_types_pb.EdDSASignature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.lightcone.data.requests.OffchainWithdrawalRequest}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.lightcone.data.requests.OffchainWithdrawalRequest;
  return proto.io.lightcone.data.requests.OffchainWithdrawalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.lightcone.data.requests.OffchainWithdrawalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.lightcone.data.requests.OffchainWithdrawalRequest}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExchangeId(value);
      break;
    case 2:
      var value = new data_types_pb.AccountID;
      reader.readMessage(value,data_types_pb.AccountID.deserializeBinaryFromReader);
      msg.setAccountId(value);
      break;
    case 3:
      var value = new data_types_pb.TokenID;
      reader.readMessage(value,data_types_pb.TokenID.deserializeBinaryFromReader);
      msg.setTokenId(value);
      break;
    case 4:
      var value = new data_types_pb.Amount;
      reader.readMessage(value,data_types_pb.Amount.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 5:
      var value = new data_types_pb.AccountID;
      reader.readMessage(value,data_types_pb.AccountID.deserializeBinaryFromReader);
      msg.setWalletId(value);
      break;
    case 6:
      var value = new data_types_pb.TokenID;
      reader.readMessage(value,data_types_pb.TokenID.deserializeBinaryFromReader);
      msg.setTokenF(value);
      break;
    case 7:
      var value = new data_types_pb.Amount;
      reader.readMessage(value,data_types_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountF(value);
      break;
    case 8:
      var value = new data_types_pb.Percentage;
      reader.readMessage(value,data_types_pb.Percentage.deserializeBinaryFromReader);
      msg.setWalletSplit(value);
      break;
    case 9:
      var value = new data_types_pb.Nonce;
      reader.readMessage(value,data_types_pb.Nonce.deserializeBinaryFromReader);
      msg.setNonce(value);
      break;
    case 10:
      var value = new data_types_pb.EdDSASignature;
      reader.readMessage(value,data_types_pb.EdDSASignature.deserializeBinaryFromReader);
      msg.setSig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.lightcone.data.requests.OffchainWithdrawalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.lightcone.data.requests.OffchainWithdrawalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      data_types_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getTokenId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      data_types_pb.TokenID.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      data_types_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getWalletId();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      data_types_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getTokenF();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      data_types_pb.TokenID.serializeBinaryToWriter
    );
  }
  f = message.getAmountF();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      data_types_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getWalletSplit();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      data_types_pb.Percentage.serializeBinaryToWriter
    );
  }
  f = message.getNonce();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      data_types_pb.Nonce.serializeBinaryToWriter
    );
  }
  f = message.getSig();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      data_types_pb.EdDSASignature.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 exchange_id = 1;
 * @return {number}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.getExchangeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.setExchangeId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional io.lightcone.data.types.AccountID account_id = 2;
 * @return {?proto.io.lightcone.data.types.AccountID}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.getAccountId = function() {
  return /** @type{?proto.io.lightcone.data.types.AccountID} */ (
    jspb.Message.getWrapperField(this, data_types_pb.AccountID, 2));
};


/** @param {?proto.io.lightcone.data.types.AccountID|undefined} value */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.setAccountId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.clearAccountId = function() {
  this.setAccountId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.hasAccountId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional io.lightcone.data.types.TokenID token_id = 3;
 * @return {?proto.io.lightcone.data.types.TokenID}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.getTokenId = function() {
  return /** @type{?proto.io.lightcone.data.types.TokenID} */ (
    jspb.Message.getWrapperField(this, data_types_pb.TokenID, 3));
};


/** @param {?proto.io.lightcone.data.types.TokenID|undefined} value */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.setTokenId = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.clearTokenId = function() {
  this.setTokenId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.hasTokenId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional io.lightcone.data.types.Amount amount = 4;
 * @return {?proto.io.lightcone.data.types.Amount}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.getAmount = function() {
  return /** @type{?proto.io.lightcone.data.types.Amount} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Amount, 4));
};


/** @param {?proto.io.lightcone.data.types.Amount|undefined} value */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional io.lightcone.data.types.AccountID wallet_id = 5;
 * @return {?proto.io.lightcone.data.types.AccountID}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.getWalletId = function() {
  return /** @type{?proto.io.lightcone.data.types.AccountID} */ (
    jspb.Message.getWrapperField(this, data_types_pb.AccountID, 5));
};


/** @param {?proto.io.lightcone.data.types.AccountID|undefined} value */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.setWalletId = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.clearWalletId = function() {
  this.setWalletId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.hasWalletId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional io.lightcone.data.types.TokenID token_f = 6;
 * @return {?proto.io.lightcone.data.types.TokenID}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.getTokenF = function() {
  return /** @type{?proto.io.lightcone.data.types.TokenID} */ (
    jspb.Message.getWrapperField(this, data_types_pb.TokenID, 6));
};


/** @param {?proto.io.lightcone.data.types.TokenID|undefined} value */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.setTokenF = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.clearTokenF = function() {
  this.setTokenF(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.hasTokenF = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional io.lightcone.data.types.Amount amount_f = 7;
 * @return {?proto.io.lightcone.data.types.Amount}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.getAmountF = function() {
  return /** @type{?proto.io.lightcone.data.types.Amount} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Amount, 7));
};


/** @param {?proto.io.lightcone.data.types.Amount|undefined} value */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.setAmountF = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.clearAmountF = function() {
  this.setAmountF(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.hasAmountF = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional io.lightcone.data.types.Percentage wallet_split = 8;
 * @return {?proto.io.lightcone.data.types.Percentage}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.getWalletSplit = function() {
  return /** @type{?proto.io.lightcone.data.types.Percentage} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Percentage, 8));
};


/** @param {?proto.io.lightcone.data.types.Percentage|undefined} value */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.setWalletSplit = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.clearWalletSplit = function() {
  this.setWalletSplit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.hasWalletSplit = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional io.lightcone.data.types.Nonce nonce = 9;
 * @return {?proto.io.lightcone.data.types.Nonce}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.getNonce = function() {
  return /** @type{?proto.io.lightcone.data.types.Nonce} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Nonce, 9));
};


/** @param {?proto.io.lightcone.data.types.Nonce|undefined} value */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.setNonce = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.clearNonce = function() {
  this.setNonce(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.hasNonce = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional io.lightcone.data.types.EdDSASignature sig = 10;
 * @return {?proto.io.lightcone.data.types.EdDSASignature}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.getSig = function() {
  return /** @type{?proto.io.lightcone.data.types.EdDSASignature} */ (
    jspb.Message.getWrapperField(this, data_types_pb.EdDSASignature, 10));
};


/** @param {?proto.io.lightcone.data.types.EdDSASignature|undefined} value */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.setSig = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.clearSig = function() {
  this.setSig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OffchainWithdrawalRequest.prototype.hasSig = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.lightcone.data.requests.OrderCancellationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.lightcone.data.requests.OrderCancellationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.lightcone.data.requests.OrderCancellationRequest.displayName = 'proto.io.lightcone.data.requests.OrderCancellationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.lightcone.data.requests.OrderCancellationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.lightcone.data.requests.OrderCancellationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountId: (f = msg.getAccountId()) && data_types_pb.AccountID.toObject(includeInstance, f),
    orderId: (f = msg.getOrderId()) && data_types_pb.OrderID.toObject(includeInstance, f),
    walletId: (f = msg.getWalletId()) && data_types_pb.AccountID.toObject(includeInstance, f),
    tokenS: (f = msg.getTokenS()) && data_types_pb.TokenID.toObject(includeInstance, f),
    tokenF: (f = msg.getTokenF()) && data_types_pb.TokenID.toObject(includeInstance, f),
    amountF: (f = msg.getAmountF()) && data_types_pb.Amount.toObject(includeInstance, f),
    walletSplitPctg: (f = msg.getWalletSplitPctg()) && data_types_pb.Percentage.toObject(includeInstance, f),
    nonce: (f = msg.getNonce()) && data_types_pb.Nonce.toObject(includeInstance, f),
    sig: (f = msg.getSig()) && data_types_pb.EdDSASignature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.lightcone.data.requests.OrderCancellationRequest}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.lightcone.data.requests.OrderCancellationRequest;
  return proto.io.lightcone.data.requests.OrderCancellationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.lightcone.data.requests.OrderCancellationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.lightcone.data.requests.OrderCancellationRequest}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExchangeId(value);
      break;
    case 2:
      var value = new data_types_pb.AccountID;
      reader.readMessage(value,data_types_pb.AccountID.deserializeBinaryFromReader);
      msg.setAccountId(value);
      break;
    case 3:
      var value = new data_types_pb.OrderID;
      reader.readMessage(value,data_types_pb.OrderID.deserializeBinaryFromReader);
      msg.setOrderId(value);
      break;
    case 4:
      var value = new data_types_pb.AccountID;
      reader.readMessage(value,data_types_pb.AccountID.deserializeBinaryFromReader);
      msg.setWalletId(value);
      break;
    case 5:
      var value = new data_types_pb.TokenID;
      reader.readMessage(value,data_types_pb.TokenID.deserializeBinaryFromReader);
      msg.setTokenS(value);
      break;
    case 6:
      var value = new data_types_pb.TokenID;
      reader.readMessage(value,data_types_pb.TokenID.deserializeBinaryFromReader);
      msg.setTokenF(value);
      break;
    case 7:
      var value = new data_types_pb.Amount;
      reader.readMessage(value,data_types_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountF(value);
      break;
    case 8:
      var value = new data_types_pb.Percentage;
      reader.readMessage(value,data_types_pb.Percentage.deserializeBinaryFromReader);
      msg.setWalletSplitPctg(value);
      break;
    case 9:
      var value = new data_types_pb.Nonce;
      reader.readMessage(value,data_types_pb.Nonce.deserializeBinaryFromReader);
      msg.setNonce(value);
      break;
    case 10:
      var value = new data_types_pb.EdDSASignature;
      reader.readMessage(value,data_types_pb.EdDSASignature.deserializeBinaryFromReader);
      msg.setSig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.lightcone.data.requests.OrderCancellationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.lightcone.data.requests.OrderCancellationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      data_types_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getOrderId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      data_types_pb.OrderID.serializeBinaryToWriter
    );
  }
  f = message.getWalletId();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      data_types_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getTokenS();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      data_types_pb.TokenID.serializeBinaryToWriter
    );
  }
  f = message.getTokenF();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      data_types_pb.TokenID.serializeBinaryToWriter
    );
  }
  f = message.getAmountF();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      data_types_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getWalletSplitPctg();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      data_types_pb.Percentage.serializeBinaryToWriter
    );
  }
  f = message.getNonce();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      data_types_pb.Nonce.serializeBinaryToWriter
    );
  }
  f = message.getSig();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      data_types_pb.EdDSASignature.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 exchange_id = 1;
 * @return {number}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.getExchangeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.setExchangeId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional io.lightcone.data.types.AccountID account_id = 2;
 * @return {?proto.io.lightcone.data.types.AccountID}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.getAccountId = function() {
  return /** @type{?proto.io.lightcone.data.types.AccountID} */ (
    jspb.Message.getWrapperField(this, data_types_pb.AccountID, 2));
};


/** @param {?proto.io.lightcone.data.types.AccountID|undefined} value */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.setAccountId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.clearAccountId = function() {
  this.setAccountId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.hasAccountId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional io.lightcone.data.types.OrderID order_id = 3;
 * @return {?proto.io.lightcone.data.types.OrderID}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.getOrderId = function() {
  return /** @type{?proto.io.lightcone.data.types.OrderID} */ (
    jspb.Message.getWrapperField(this, data_types_pb.OrderID, 3));
};


/** @param {?proto.io.lightcone.data.types.OrderID|undefined} value */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.setOrderId = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.clearOrderId = function() {
  this.setOrderId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.hasOrderId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional io.lightcone.data.types.AccountID wallet_id = 4;
 * @return {?proto.io.lightcone.data.types.AccountID}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.getWalletId = function() {
  return /** @type{?proto.io.lightcone.data.types.AccountID} */ (
    jspb.Message.getWrapperField(this, data_types_pb.AccountID, 4));
};


/** @param {?proto.io.lightcone.data.types.AccountID|undefined} value */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.setWalletId = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.clearWalletId = function() {
  this.setWalletId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.hasWalletId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional io.lightcone.data.types.TokenID token_s = 5;
 * @return {?proto.io.lightcone.data.types.TokenID}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.getTokenS = function() {
  return /** @type{?proto.io.lightcone.data.types.TokenID} */ (
    jspb.Message.getWrapperField(this, data_types_pb.TokenID, 5));
};


/** @param {?proto.io.lightcone.data.types.TokenID|undefined} value */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.setTokenS = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.clearTokenS = function() {
  this.setTokenS(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.hasTokenS = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional io.lightcone.data.types.TokenID token_f = 6;
 * @return {?proto.io.lightcone.data.types.TokenID}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.getTokenF = function() {
  return /** @type{?proto.io.lightcone.data.types.TokenID} */ (
    jspb.Message.getWrapperField(this, data_types_pb.TokenID, 6));
};


/** @param {?proto.io.lightcone.data.types.TokenID|undefined} value */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.setTokenF = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.clearTokenF = function() {
  this.setTokenF(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.hasTokenF = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional io.lightcone.data.types.Amount amount_f = 7;
 * @return {?proto.io.lightcone.data.types.Amount}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.getAmountF = function() {
  return /** @type{?proto.io.lightcone.data.types.Amount} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Amount, 7));
};


/** @param {?proto.io.lightcone.data.types.Amount|undefined} value */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.setAmountF = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.clearAmountF = function() {
  this.setAmountF(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.hasAmountF = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional io.lightcone.data.types.Percentage wallet_split_pctg = 8;
 * @return {?proto.io.lightcone.data.types.Percentage}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.getWalletSplitPctg = function() {
  return /** @type{?proto.io.lightcone.data.types.Percentage} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Percentage, 8));
};


/** @param {?proto.io.lightcone.data.types.Percentage|undefined} value */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.setWalletSplitPctg = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.clearWalletSplitPctg = function() {
  this.setWalletSplitPctg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.hasWalletSplitPctg = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional io.lightcone.data.types.Nonce nonce = 9;
 * @return {?proto.io.lightcone.data.types.Nonce}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.getNonce = function() {
  return /** @type{?proto.io.lightcone.data.types.Nonce} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Nonce, 9));
};


/** @param {?proto.io.lightcone.data.types.Nonce|undefined} value */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.setNonce = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.clearNonce = function() {
  this.setNonce(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.hasNonce = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional io.lightcone.data.types.EdDSASignature sig = 10;
 * @return {?proto.io.lightcone.data.types.EdDSASignature}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.getSig = function() {
  return /** @type{?proto.io.lightcone.data.types.EdDSASignature} */ (
    jspb.Message.getWrapperField(this, data_types_pb.EdDSASignature, 10));
};


/** @param {?proto.io.lightcone.data.types.EdDSASignature|undefined} value */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.setSig = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.clearSig = function() {
  this.setSig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.lightcone.data.requests.OrderCancellationRequest.prototype.hasSig = function() {
  return jspb.Message.getField(this, 10) != null;
};


goog.object.extend(exports, proto.io.lightcone.data.requests);
