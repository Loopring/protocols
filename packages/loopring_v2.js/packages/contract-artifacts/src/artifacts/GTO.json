{
  "contractName": "GTO",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "addBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x60c0604052601e60808190527f4e6577204c6f6f7072696e6720746f6b656e206f6e20657468657265756d000060a09081526200004091600391906200089e565b506040805180820190915260038082527f4c52430000000000000000000000000000000000000000000000000000000000602090920191825262000087916004916200089e565b506005805460ff19166012179055348015620000a257600080fd5b50604080518082018252600881527f47544f5f544553540000000000000000000000000000000000000000000000006020808301919091528251808401909352600383527f47544f0000000000000000000000000000000000000000000000000000000000908301529060126b033b2e3c9fd0803ce800000083838383338015156200018f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b620001a4848664010000000062000211810204565b8451620001b99060039060208801906200089e565b508351620001cf9060049060208701906200089e565b506005805460ff191660ff94909416939093179092556001819055600160a060020a039091166000908152602081905260409020555062000943945050505050565b815182906003118015906200022857506008815111155b15156200029657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f494e56414c49445f53495a450000000000000000000000000000000000000000604482015290519081900360640190fd5b60005b815181101562000674578181815181101515620002b257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002600160f860020a031916602e7f0100000000000000000000000000000000000000000000000000000000000000021480620003bd575081818151811015156200034257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002600160f860020a031916605f7f010000000000000000000000000000000000000000000000000000000000000002145b80620004dd575081517f410000000000000000000000000000000000000000000000000000000000000090839083908110620003f557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002600160f860020a03191610158015620004dd575081517f5a00000000000000000000000000000000000000000000000000000000000000908390839081106200048557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002600160f860020a03191611155b80620005fd575081517f6100000000000000000000000000000000000000000000000000000000000000908390839081106200051557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002600160f860020a03191610158015620005fd575081517f7a0000000000000000000000000000000000000000000000000000000000000090839083908110620005a557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002600160f860020a03191611155b15156200066b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b60010162000299565b50805182518391118015906200068c57506080815111155b1515620006fa57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f494e56414c49445f53495a450000000000000000000000000000000000000000604482015290519081900360640190fd5b60005b8151811015620008975781517f2000000000000000000000000000000000000000000000000000000000000000908390839081106200073857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002600160f860020a0319161015801562000820575081517f7e0000000000000000000000000000000000000000000000000000000000000090839083908110620007c857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002600160f860020a03191611155b15156200088e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b600101620006fd565b5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620008e157805160ff191683800117855562000911565b8280016001018555821562000911579182015b8281111562000911578251825591602001919060010190620008f4565b506200091f92915062000923565b5090565b6200094091905b808211156200091f57600081556001016200092a565b90565b6113b180620009536000396000f3fe608060405260043610610105576000357c01000000000000000000000000000000000000000000000000000000009004806366188463116100a7578063a9059cbb11610076578063a9059cbb146104ae578063d73dd623146104f4578063dd62ed3e1461053a578063e30443bc1461058257610105565b806366188463146103cd57806370a082311461041357806379cc67901461045357806395d89b411461049957610105565b806321e5383a116100e357806321e5383a146102e057806323b872dd14610328578063313ce5671461037857806342966c68146103a357610105565b806306fdde03146101d5578063095ea7b31461025f57806318160ddd146102b9575b604080518082018252600b81527f554e535550504f52544544000000000000000000000000000000000000000000602080830191825292517f08c379a00000000000000000000000000000000000000000000000000000000081526004810193845282516024820152825192939283926044909201919080838360005b8381101561019a578181015183820152602001610182565b50505050905090810190601f1680156101c75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b3480156101e157600080fd5b506101ea6105c8565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022457818101518382015260200161020c565b50505050905090810190601f1680156102515780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561026b57600080fd5b506102a56004803603604081101561028257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610674565b604080519115158252519081900360200190f35b3480156102c557600080fd5b506102ce6106e7565b60408051918252519081900360200190f35b3480156102ec57600080fd5b506103266004803603604081101561030357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106ed565b005b34801561033457600080fd5b506102a56004803603606081101561034b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356107bf565b34801561038457600080fd5b5061038d610a31565b6040805160ff9092168252519081900360200190f35b3480156103af57600080fd5b506102a5600480360360208110156103c657600080fd5b5035610a3a565b3480156103d957600080fd5b506102a5600480360360408110156103f057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610bb7565b34801561041f57600080fd5b506102ce6004803603602081101561043657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610cdb565b34801561045f57600080fd5b506102a56004803603604081101561047657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610d03565b3480156104a557600080fd5b506101ea611024565b3480156104ba57600080fd5b506102a5600480360360408110156104d157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561109d565b34801561050057600080fd5b506102a56004803603604081101561051757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356111e3565b34801561054657600080fd5b506102ce6004803603604081101561055d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516611296565b34801561058e57600080fd5b50610326600480360360408110156105a557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356112ce565b6003805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561066c5780601f106106415761010080835404028352916020019161066c565b820191906000526020600020905b81548152906001019060200180831161064f57829003601f168201915b505050505081565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b60006106f883610cdb565b905081810181111561076b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b60015461077e908363ffffffff61135d16565b600155610791818363ffffffff61135d16565b73ffffffffffffffffffffffffffffffffffffffff9093166000908152602081905260409020929092555050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604081205482111561085357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff841660009081526002602090815260408083203384529091529020548211156108f257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8416600090815260208190526040902054610928908363ffffffff61137316565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260208190526040808220939093559085168152205461096a908363ffffffff61135d16565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081815260408083209490945591871681526002825282812033825290915220546109b9908363ffffffff61137316565b73ffffffffffffffffffffffffffffffffffffffff808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60055460ff1681565b33600090815260208190526040812054821115610ab857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b33600081815260208190526040902054610ad8908463ffffffff61137316565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902055600154610b11908463ffffffff61137316565b60015560408051848152905173ffffffffffffffffffffffffffffffffffffffff8316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a260408051848152905160009173ffffffffffffffffffffffffffffffffffffffff8416917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205480831115610c265733600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452909152812055610c68565b610c36818463ffffffff61137316565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091529020555b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b600073ffffffffffffffffffffffffffffffffffffffff83161515610d8957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054821115610e1d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152600260209081526040808320338452909152902054821115610ebc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054610ef2908363ffffffff61137316565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260208181526040808320939093556002815282822033835290522054610f3a908363ffffffff61137316565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902055600154610f7e908363ffffffff61137316565b60015560408051838152905173ffffffffffffffffffffffffffffffffffffffff8516917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a260408051838152905160009173ffffffffffffffffffffffffffffffffffffffff8616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b6004805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561066c5780601f106106415761010080835404028352916020019161066c565b3360009081526020819052604081205482111561111b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b3360009081526020819052604090205461113b908363ffffffff61137316565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff85168152205461117a908363ffffffff61135d16565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054611224908363ffffffff61135d16565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205490565b60006112d983610cdb565b90508082101561130d576113056112f6828463ffffffff61137316565b6001549063ffffffff61137316565b600155611333565b61132f611320838363ffffffff61137316565b6001549063ffffffff61135d16565b6001555b5073ffffffffffffffffffffffffffffffffffffffff909116600090815260208190526040902055565b60008282018381101561136c57fe5b9392505050565b60008282111561137f57fe5b5090039056fea165627a7a72305820e1fc71513e84ca131e028472a255003d66598bd3499a96d8d6bf2783abbde5cf0029",
  "deployedBytecode": "0x608060405260043610610105576000357c01000000000000000000000000000000000000000000000000000000009004806366188463116100a7578063a9059cbb11610076578063a9059cbb146104ae578063d73dd623146104f4578063dd62ed3e1461053a578063e30443bc1461058257610105565b806366188463146103cd57806370a082311461041357806379cc67901461045357806395d89b411461049957610105565b806321e5383a116100e357806321e5383a146102e057806323b872dd14610328578063313ce5671461037857806342966c68146103a357610105565b806306fdde03146101d5578063095ea7b31461025f57806318160ddd146102b9575b604080518082018252600b81527f554e535550504f52544544000000000000000000000000000000000000000000602080830191825292517f08c379a00000000000000000000000000000000000000000000000000000000081526004810193845282516024820152825192939283926044909201919080838360005b8381101561019a578181015183820152602001610182565b50505050905090810190601f1680156101c75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b3480156101e157600080fd5b506101ea6105c8565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022457818101518382015260200161020c565b50505050905090810190601f1680156102515780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561026b57600080fd5b506102a56004803603604081101561028257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610674565b604080519115158252519081900360200190f35b3480156102c557600080fd5b506102ce6106e7565b60408051918252519081900360200190f35b3480156102ec57600080fd5b506103266004803603604081101561030357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106ed565b005b34801561033457600080fd5b506102a56004803603606081101561034b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356107bf565b34801561038457600080fd5b5061038d610a31565b6040805160ff9092168252519081900360200190f35b3480156103af57600080fd5b506102a5600480360360208110156103c657600080fd5b5035610a3a565b3480156103d957600080fd5b506102a5600480360360408110156103f057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610bb7565b34801561041f57600080fd5b506102ce6004803603602081101561043657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610cdb565b34801561045f57600080fd5b506102a56004803603604081101561047657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610d03565b3480156104a557600080fd5b506101ea611024565b3480156104ba57600080fd5b506102a5600480360360408110156104d157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561109d565b34801561050057600080fd5b506102a56004803603604081101561051757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356111e3565b34801561054657600080fd5b506102ce6004803603604081101561055d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516611296565b34801561058e57600080fd5b50610326600480360360408110156105a557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356112ce565b6003805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561066c5780601f106106415761010080835404028352916020019161066c565b820191906000526020600020905b81548152906001019060200180831161064f57829003601f168201915b505050505081565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b60006106f883610cdb565b905081810181111561076b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b60015461077e908363ffffffff61135d16565b600155610791818363ffffffff61135d16565b73ffffffffffffffffffffffffffffffffffffffff9093166000908152602081905260409020929092555050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604081205482111561085357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff841660009081526002602090815260408083203384529091529020548211156108f257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8416600090815260208190526040902054610928908363ffffffff61137316565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260208190526040808220939093559085168152205461096a908363ffffffff61135d16565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081815260408083209490945591871681526002825282812033825290915220546109b9908363ffffffff61137316565b73ffffffffffffffffffffffffffffffffffffffff808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60055460ff1681565b33600090815260208190526040812054821115610ab857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b33600081815260208190526040902054610ad8908463ffffffff61137316565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902055600154610b11908463ffffffff61137316565b60015560408051848152905173ffffffffffffffffffffffffffffffffffffffff8316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a260408051848152905160009173ffffffffffffffffffffffffffffffffffffffff8416917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205480831115610c265733600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452909152812055610c68565b610c36818463ffffffff61137316565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091529020555b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b600073ffffffffffffffffffffffffffffffffffffffff83161515610d8957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054821115610e1d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152600260209081526040808320338452909152902054821115610ebc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054610ef2908363ffffffff61137316565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260208181526040808320939093556002815282822033835290522054610f3a908363ffffffff61137316565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902055600154610f7e908363ffffffff61137316565b60015560408051838152905173ffffffffffffffffffffffffffffffffffffffff8516917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a260408051838152905160009173ffffffffffffffffffffffffffffffffffffffff8616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b6004805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561066c5780601f106106415761010080835404028352916020019161066c565b3360009081526020819052604081205482111561111b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f56414c554500000000000000000000000000000000000000604482015290519081900360640190fd5b3360009081526020819052604090205461113b908363ffffffff61137316565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff85168152205461117a908363ffffffff61135d16565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054611224908363ffffffff61135d16565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205490565b60006112d983610cdb565b90508082101561130d576113056112f6828463ffffffff61137316565b6001549063ffffffff61137316565b600155611333565b61132f611320838363ffffffff61137316565b6001549063ffffffff61135d16565b6001555b5073ffffffffffffffffffffffffffffffffffffffff909116600090815260208190526040902055565b60008282018381101561136c57fe5b9392505050565b60008282111561137f57fe5b5090039056fea165627a7a72305820e1fc71513e84ca131e028472a255003d66598bd3499a96d8d6bf2783abbde5cf0029",
  "sourceMap": "8370:57:54:-;660:151:56;8370:57:54;;660:151:56;8370:57:54;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8433:32:54;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8471:31:54;;;-1:-1:-1;;8471:31:54;8500:2;8471:31;;;694:114:56;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;752:285:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;763:2:56;775:8;752:285:52;;763:2:56;775:8;990:10:52;9798:28:54;;;9790:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9853:33;9872:7;9880:5;9853:18;;;;:33;:::i;:::-;9897:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;9919:16:54;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;9945:8:54;:20;;-1:-1:-1;;9945:20:54;;;;;;;;;;;;;-1:-1:-1;9975:27:54;;;-1:-1:-1;;;;;10013:22:54;;;-1:-1:-1;10013:22:54;;;;;;;;;;:37;-1:-1:-1;660:151:56;;-1:-1:-1;;;;;660:151:56;10145:801:54;10336:8;;10310:7;;10348:1;-1:-1:-1;10336:13:54;;;:30;;;10365:1;10353;:8;:13;;10336:30;10328:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10398:6;10393:310;10414:1;:8;10410:1;:12;10393:310;;;10525:1;10527;10525:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10525:12:54;;10533:4;10525:12;;;:47;;;;10559:1;10561;10559:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10559:12:54;;10567:4;10559:12;;;10525:47;:98;;;-1:-1:-1;10594:4:54;;:12;;:1;;10596;;10594:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10594:12:54;;;;:28;;;;-1:-1:-1;10610:4:54;;:12;;:1;;10612;;10610:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10610:12:54;;;;10594:28;10525:149;;;-1:-1:-1;10645:4:54;;:12;;:1;;10647;;10645:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10645:12:54;;;;:28;;;;-1:-1:-1;10661:4:54;;:12;;:1;;10663;;10661:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10661:12:54;;;;10645:28;10500:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10424:3;;10393:310;;;-1:-1:-1;10771:8:54;;10759;;10735:5;;-1:-1:-1;10759:20:54;;;:39;;;10795:3;10783:1;:8;:15;;10759:39;10751:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10830:6;10825:115;10846:1;:8;10842:1;:12;10825:115;;;10883:4;;:12;;:1;;10885;;10883:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10883:12:54;;;;:28;;;;-1:-1:-1;10899:4:54;;:12;;:1;;10901;;10899:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10899:12:54;;;;10883:28;10875:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10856:3;;10825:115;;;;10145:801;;;;:::o;660:151:56:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:151:56;;;-1:-1:-1;660:151:56;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "660:151:56:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11018:11:54;;;;;;;;;;;;;;;;;;;11011:19;;;;;;;;;;;;;;;;;;;11018:11;;11011:19;;;;;;;;11018:11;11011:19;;11018:11;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11011:19:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8370:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8370:57:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;8370:57:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5940:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5940:202:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5940:202:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2601:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2601:89:54;;;:::i;:::-;;;;;;;;;;;;;;;;1437:322:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1437:322:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1437:322:52;;;;;;;;;:::i;:::-;;4764:532:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4764:532:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4764:532:54;;;;;;;;;;;;;;;;;;:::i;8471:31::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8471:31:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8565:378;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8565:378:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8565:378:54;;:::i;7843:441::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7843:441:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7843:441:54;;;;;;;;;:::i;3527:105::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3527:105:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3527:105:54;;;;:::i;8949:567::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8949:567:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8949:567:54;;;;;;;;;:::i;8433:32::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8433:32:54;;;:::i;2859:451::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2859:451:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2859:451:54;;;;;;;;;:::i;7084:276::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7084:276:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7084:276:54;;;;;;;;;:::i;6474:132::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6474:132:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6474:132:54;;;;;;;;;;;:::i;1043:388:52:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1043:388:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1043:388:52;;;;;;;;;:::i;8370:57:54:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5940:202::-;6031:10;6007:4;6023:19;;;:7;:19;;;;;;;;;:29;;;;;;;;;;;:38;;;6076;;;;;;;6007:4;;6023:29;;6031:10;;6076:38;;;;;;;;-1:-1:-1;6131:4:54;5940:202;;;;:::o;2601:89::-;2671:12;;2601:89;:::o;1437:322:52:-;1542:16;1561:18;1571:7;1561:9;:18::i;:::-;1542:37;-1:-1:-1;1597:20:52;;;:35;-1:-1:-1;1597:35:52;1589:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:12;;:24;;1692:6;1675:24;:16;:24;:::i;:::-;1660:12;:39;1729:23;:11;1745:6;1729:23;:15;:23;:::i;:::-;1709:17;;;;:8;:17;;;;;;;;;;:43;;;;-1:-1:-1;;1437:322:52:o;4764:532:54:-;4937:15;;;4846:4;4937:15;;;;;;;;;;;4927:25;;;4919:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4998:14;;;;;;;:7;:14;;;;;;;;5013:10;4998:26;;;;;;;;4988:36;;;4980:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5070:15;;;:8;:15;;;;;;;;;;;:27;;5090:6;5070:27;:19;:27;:::i;:::-;5052:15;;;;:8;:15;;;;;;;;;;;:45;;;;5123:13;;;;;;;:25;;5141:6;5123:25;:17;:25;:::i;:::-;5107:13;;;;:8;:13;;;;;;;;;;;:41;;;;5187:14;;;;;:7;:14;;;;;5202:10;5187:26;;;;;;;:38;;5218:6;5187:38;:30;:38;:::i;:::-;5158:14;;;;;;;;:7;:14;;;;;;;;5173:10;5158:26;;;;;;;;:67;;;;5240:28;;;;;;;;;;;5158:14;;5240:28;;;;;;;;;;;-1:-1:-1;5285:4:54;4764:532;;;;;:::o;8471:31::-;;;;;;:::o;8565:378::-;8654:10;8611:4;8645:20;;;;;;;;;;;8635:30;;;8627:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8711:10;8694:14;8750:16;;;;;;;;;;;:28;;8771:6;8750:28;:20;:28;:::i;:::-;8731:16;;;:8;:16;;;;;;;;;;:47;8803:12;;:24;;8820:6;8803:24;:16;:24;:::i;:::-;8788:12;:39;8842:20;;;;;;;;;;;;;;;;;;;;;;8877:38;;;;;;;;8902:3;;8877:38;;;;;;;;;;;;;-1:-1:-1;8932:4:54;;8565:378;-1:-1:-1;;8565:378:54:o;7843:441::-;7966:10;7926:4;7958:19;;;:7;:19;;;;;;;;;:29;;;;;;;;;;8001:27;;;7997:184;;;8052:10;8076:1;8044:19;;;:7;:19;;;;;;;;;:29;;;;;;;;;:33;7997:184;;;8140:30;:8;8153:16;8140:30;:12;:30;:::i;:::-;8116:10;8108:19;;;;:7;:19;;;;;;;;;:29;;;;;;;;;:62;7997:184;8204:10;8226:19;;;;:7;:19;;;;;;;;8195:61;;;8226:29;;;;;;;;;;;8195:61;;;;;;;;;8204:10;8195:61;;;;;;;;;;;-1:-1:-1;8273:4:54;;7843:441;-1:-1:-1;;;7843:441:54:o;3527:105::-;3609:16;;3583:7;3609:16;;;;;;;;;;;;3527:105::o;8949:567::-;9015:4;9039:22;;;;;9031:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9106:16;;;:8;:16;;;;;;;;;;;9096:26;;;9088:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9168:15;;;;;;;:7;:15;;;;;;;;9184:10;9168:27;;;;;;;;9158:37;;;9150:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9243:16;;;:8;:16;;;;;;;;;;;:28;;9264:6;9243:28;:20;:28;:::i;:::-;9224:16;;;:8;:16;;;;;;;;;;;:47;;;;9311:7;:15;;;;;9327:10;9311:27;;;;;;:39;;9343:6;9311:39;:31;:39;:::i;:::-;9281:15;;;;;;;:7;:15;;;;;;;;9297:10;9281:27;;;;;;;:69;9375:12;;:24;;9392:6;9375:24;:16;:24;:::i;:::-;9360:12;:39;9415:20;;;;;;;;;;;;;;;;;;;;;;9450:38;;;;;;;;9475:3;;9450:38;;;;;;;;;;;;;-1:-1:-1;9505:4:54;8949:567;;;;:::o;8433:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2859:451;3022:10;2922:4;3013:20;;;;;;;;;;;3003:30;;;2995:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3160:10;3151:8;:20;;;;;;;;;;;:32;;3176:6;3151:32;:24;:32;:::i;:::-;3137:10;3128:8;:20;;;;;;;;;;;:55;;;;:20;3209:13;;;;;;:25;;3227:6;3209:25;:17;:25;:::i;:::-;3193:13;;;:8;:13;;;;;;;;;;;;:41;;;;3249:33;;;;;;;3193:13;;3258:10;;3249:33;;;;;;;;;;-1:-1:-1;3299:4:54;2859:451;;;;:::o;7084:276::-;7218:10;7162:4;7210:19;;;:7;:19;;;;;;;;;:29;;;;;;;;;;:46;;7244:11;7210:46;:33;:46;:::i;:::-;7186:10;7178:19;;;;:7;:19;;;;;;;;;:29;;;;;;;;;;;;:78;;;7271:61;;;;;;7178:29;;7271:61;;;;;;;;;;;-1:-1:-1;7349:4:54;7084:276;;;;:::o;6474:132::-;6574:15;;;;6548:7;6574:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;6474:132::o;1043:388:52:-;1148:16;1167:18;1177:7;1167:9;:18::i;:::-;1148:37;;1208:11;1199:6;:20;1195:194;;;1250:41;1267:23;:11;1283:6;1267:23;:15;:23;:::i;:::-;1250:12;;;:41;:16;:41;:::i;:::-;1235:12;:56;1195:194;;;1337:41;1354:23;:6;1365:11;1354:23;:10;:23;:::i;:::-;1337:12;;;:41;:16;:41;:::i;:::-;1322:12;:56;1195:194;-1:-1:-1;1398:17:52;;;;:8;:17;;;;;;;;;;:26;1043:388::o;2161:143:54:-;2219:7;2250:5;;;2272:6;;;;2265:14;;;;2296:1;2161:143;-1:-1:-1;;;2161:143:54:o;1970:120::-;2028:7;2054:6;;;;2047:14;;;;-1:-1:-1;2078:5:54;;;1970:120::o",
  "source": "/*\n\n  Copyright 2017 Loopring Project Ltd (Loopring Foundation).\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\npragma solidity 0.5.2;\n\nimport \"../DummyToken.sol\";\n\ncontract GTO is DummyToken {\n\n    constructor() DummyToken(\n        \"GTO_TEST\",\n        \"GTO\",\n        18,\n        10 ** 27\n    ) public\n    {\n    }\n\n}\n",
  "sourcePath": "/usr/local/klzhong/workspace/loopring/protocol2/contracts/test/tokens/GTO.sol",
  "ast": {
    "absolutePath": "/usr/local/klzhong/workspace/loopring/protocol2/contracts/test/tokens/GTO.sol",
    "exportedSymbols": {
      "GTO": [
        11812
      ]
    },
    "id": 11813,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11796,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "607:22:56"
      },
      {
        "absolutePath": "/usr/local/klzhong/workspace/loopring/protocol2/contracts/test/DummyToken.sol",
        "file": "../DummyToken.sol",
        "id": 11797,
        "nodeType": "ImportDirective",
        "scope": 11813,
        "sourceUnit": 10830,
        "src": "631:27:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11798,
              "name": "DummyToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10829,
              "src": "676:10:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DummyToken_$10829",
                "typeString": "contract DummyToken"
              }
            },
            "id": 11799,
            "nodeType": "InheritanceSpecifier",
            "src": "676:10:56"
          }
        ],
        "contractDependencies": [
          3056,
          10829,
          10946,
          11167,
          11127,
          11403,
          11767
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11812,
        "linearizedBaseContracts": [
          11812,
          10829,
          11767,
          3056,
          11403,
          11127,
          11167,
          10946
        ],
        "name": "GTO",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11810,
              "nodeType": "Block",
              "src": "801:7:56",
              "statements": []
            },
            "documentation": null,
            "id": 11811,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "47544f5f54455354",
                    "id": 11802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "728:10:56",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6ffb844828f679bea860ecee3118280578f2abb909cc2718cc4b7d3f71c47625",
                      "typeString": "literal_string \"GTO_TEST\""
                    },
                    "value": "GTO_TEST"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "47544f",
                    "id": 11803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "748:5:56",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b95a378f22de45dc1314c64b93fdb72c63e0671c6e0e5550c1da85f45c6a943a",
                      "typeString": "literal_string \"GTO\""
                    },
                    "value": "GTO"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 11804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "763:2:56",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000000"
                    },
                    "id": 11807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 11805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "775:2:56",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3237",
                      "id": 11806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "781:2:56",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_27_by_1",
                        "typeString": "int_const 27"
                      },
                      "value": "27"
                    },
                    "src": "775:8:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000000"
                    }
                  }
                ],
                "id": 11808,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11801,
                  "name": "DummyToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10829,
                  "src": "708:10:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DummyToken_$10829_$",
                    "typeString": "type(contract DummyToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "708:81:56"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:2:56"
            },
            "returnParameters": {
              "id": 11809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "801:0:56"
            },
            "scope": 11812,
            "src": "694:114:56",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 11813,
        "src": "660:151:56"
      }
    ],
    "src": "607:205:56"
  },
  "legacyAST": {
    "absolutePath": "/usr/local/klzhong/workspace/loopring/protocol2/contracts/test/tokens/GTO.sol",
    "exportedSymbols": {
      "GTO": [
        11812
      ]
    },
    "id": 11813,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11796,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "607:22:56"
      },
      {
        "absolutePath": "/usr/local/klzhong/workspace/loopring/protocol2/contracts/test/DummyToken.sol",
        "file": "../DummyToken.sol",
        "id": 11797,
        "nodeType": "ImportDirective",
        "scope": 11813,
        "sourceUnit": 10830,
        "src": "631:27:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11798,
              "name": "DummyToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10829,
              "src": "676:10:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DummyToken_$10829",
                "typeString": "contract DummyToken"
              }
            },
            "id": 11799,
            "nodeType": "InheritanceSpecifier",
            "src": "676:10:56"
          }
        ],
        "contractDependencies": [
          3056,
          10829,
          10946,
          11167,
          11127,
          11403,
          11767
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11812,
        "linearizedBaseContracts": [
          11812,
          10829,
          11767,
          3056,
          11403,
          11127,
          11167,
          10946
        ],
        "name": "GTO",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11810,
              "nodeType": "Block",
              "src": "801:7:56",
              "statements": []
            },
            "documentation": null,
            "id": 11811,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "47544f5f54455354",
                    "id": 11802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "728:10:56",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6ffb844828f679bea860ecee3118280578f2abb909cc2718cc4b7d3f71c47625",
                      "typeString": "literal_string \"GTO_TEST\""
                    },
                    "value": "GTO_TEST"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "47544f",
                    "id": 11803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "748:5:56",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b95a378f22de45dc1314c64b93fdb72c63e0671c6e0e5550c1da85f45c6a943a",
                      "typeString": "literal_string \"GTO\""
                    },
                    "value": "GTO"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 11804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "763:2:56",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000000"
                    },
                    "id": 11807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 11805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "775:2:56",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3237",
                      "id": 11806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "781:2:56",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_27_by_1",
                        "typeString": "int_const 27"
                      },
                      "value": "27"
                    },
                    "src": "775:8:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000000"
                    }
                  }
                ],
                "id": 11808,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11801,
                  "name": "DummyToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10829,
                  "src": "708:10:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DummyToken_$10829_$",
                    "typeString": "type(contract DummyToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "708:81:56"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:2:56"
            },
            "returnParameters": {
              "id": 11809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "801:0:56"
            },
            "scope": 11812,
            "src": "694:114:56",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 11813,
        "src": "660:151:56"
      }
    ],
    "src": "607:205:56"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-03-19T09:16:27.548Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.     * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseApproval(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender.     * approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseApproval(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender.     * approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "transfer token for a specified address",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}