{
  "contractName": "IOrderRegistry",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "broker",
          "type": "address"
        },
        {
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "isOrderHashRegistered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "registerOrderHash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n\n  Copyright 2017 Loopring Project Ltd (Loopring Foundation).\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\npragma solidity 0.5.2;\n\n\n/// @title IOrderRegistry\n/// @author Daniel Wang - <daniel@loopring.org>.\ncontract IOrderRegistry {\n\n    /// @dev   Returns wether the order hash was registered in the registry.\n    /// @param broker The broker of the order\n    /// @param orderHash The hash of the order\n    /// @return True if the order hash was registered, else false.\n    function isOrderHashRegistered(\n        address broker,\n        bytes32 orderHash\n        )\n        external\n        view\n        returns (bool);\n\n    /// @dev   Registers an order in the registry.\n    ///        msg.sender needs to be the broker of the order.\n    /// @param orderHash The hash of the order\n    function registerOrderHash(\n        bytes32 orderHash\n        )\n        external;\n}\n",
  "sourcePath": "/usr/local/klzhong/workspace/loopring/protocol2/contracts/iface/IOrderRegistry.sol",
  "ast": {
    "absolutePath": "/usr/local/klzhong/workspace/loopring/protocol2/contracts/iface/IOrderRegistry.sol",
    "exportedSymbols": {
      "IOrderRegistry": [
        3406
      ]
    },
    "id": 3407,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3391,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "607:22:11"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title IOrderRegistry\n @author Daniel Wang - <daniel@loopring.org>.",
        "fullyImplemented": false,
        "id": 3406,
        "linearizedBaseContracts": [
          3406
        ],
        "name": "IOrderRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev   Returns wether the order hash was registered in the registry.\n @param broker The broker of the order\n @param orderHash The hash of the order\n @return True if the order hash was registered, else false.",
            "id": 3400,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOrderHashRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3393,
                  "name": "broker",
                  "nodeType": "VariableDeclaration",
                  "scope": 3400,
                  "src": "1015:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3395,
                  "name": "orderHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3400,
                  "src": "1039:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3394,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:61:11"
            },
            "returnParameters": {
              "id": 3399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3398,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3400,
                  "src": "1114:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3397,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1113:6:11"
            },
            "scope": 3406,
            "src": "975:145:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev   Registers an order in the registry.\n        msg.sender needs to be the broker of the order.\n @param orderHash The hash of the order",
            "id": 3405,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerOrderHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3402,
                  "name": "orderHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3405,
                  "src": "1323:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3401,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1313:37:11"
            },
            "returnParameters": {
              "id": 3404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1367:0:11"
            },
            "scope": 3406,
            "src": "1287:81:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3407,
        "src": "707:663:11"
      }
    ],
    "src": "607:764:11"
  },
  "legacyAST": {
    "absolutePath": "/usr/local/klzhong/workspace/loopring/protocol2/contracts/iface/IOrderRegistry.sol",
    "exportedSymbols": {
      "IOrderRegistry": [
        3406
      ]
    },
    "id": 3407,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3391,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "607:22:11"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title IOrderRegistry\n @author Daniel Wang - <daniel@loopring.org>.",
        "fullyImplemented": false,
        "id": 3406,
        "linearizedBaseContracts": [
          3406
        ],
        "name": "IOrderRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev   Returns wether the order hash was registered in the registry.\n @param broker The broker of the order\n @param orderHash The hash of the order\n @return True if the order hash was registered, else false.",
            "id": 3400,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOrderHashRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3393,
                  "name": "broker",
                  "nodeType": "VariableDeclaration",
                  "scope": 3400,
                  "src": "1015:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3395,
                  "name": "orderHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3400,
                  "src": "1039:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3394,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:61:11"
            },
            "returnParameters": {
              "id": 3399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3398,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3400,
                  "src": "1114:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3397,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1113:6:11"
            },
            "scope": 3406,
            "src": "975:145:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev   Registers an order in the registry.\n        msg.sender needs to be the broker of the order.\n @param orderHash The hash of the order",
            "id": 3405,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerOrderHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3402,
                  "name": "orderHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3405,
                  "src": "1323:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3401,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1313:37:11"
            },
            "returnParameters": {
              "id": 3404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1367:0:11"
            },
            "scope": 3406,
            "src": "1287:81:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3407,
        "src": "707:663:11"
      }
    ],
    "src": "607:764:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-03-19T09:16:27.471Z",
  "devdoc": {
    "author": "Daniel Wang - <daniel@loopring.org>.",
    "methods": {
      "isOrderHashRegistered(address,bytes32)": {
        "details": "Returns wether the order hash was registered in the registry.",
        "params": {
          "broker": "The broker of the order",
          "orderHash": "The hash of the order"
        },
        "return": "True if the order hash was registered, else false."
      },
      "registerOrderHash(bytes32)": {
        "details": "Registers an order in the registry.        msg.sender needs to be the broker of the order.",
        "params": {
          "orderHash": "The hash of the order"
        }
      }
    },
    "title": "IOrderRegistry"
  },
  "userdoc": {
    "methods": {}
  }
}